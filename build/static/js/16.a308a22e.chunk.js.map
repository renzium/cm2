{"version":3,"sources":["@core/components/input-password-toggle/index.js","firebase.js","@core/components/wizard/index.js","views/extensions/access-control/CountrySelector.js","views/extensions/access-control/Address.js","views/extensions/access-control/AccountDetails.js","views/extensions/access-control/FileUploaderMultiple.js","views/extensions/access-control/WizardModernVertical.js","views/extensions/access-control/index.js"],"names":["InputPasswordToggle","forwardRef","props","ref","label","hideIcon","showIcon","visible","className","htmlFor","placeholder","iconSize","inputClassName","invalid","rest","useState","inputVisibility","setInputVisibility","for","classnames","type","id","onClick","size","renderIcon","defaultProps","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","databaseURL","app","initializeApp","database","getDatabase","auth","getAuth","storage","getStorage","Wizard","contentClassName","headerClassName","steps","separator","options","instance","activeIndex","setActiveIndex","stepper","useEffect","Stepper","current","addEventListener","event","detail","indexStep","map","step","index","length","crossed","active","icon","title","subtitle","content","CountrySelector","defaultValues","city","zipcode","address","country","Address","userData","JSON","parse","localStorage","getItem","userAddress","userId","localId","data","setData","value","setValue","useMemo","countryList","getData","changeHandler","useForm","control","setError","handleSubmit","errors","formState","onSubmit","isObjEmpty","next","db","set","then","setItem","stringify","writeUserData","key","message","md","name","render","field","maxLength","defaultValue","theme","selectThemeColors","onChange","color","previous","fullName","email","SSN","confirmSSN","DOB","AccountDetails","SignupSchema","yup","shape","required","oneOf","isUserLoggedIn","displayName","userInformation","resolver","yupResolver","String","Date","updateProfile","currentUser","console","log","catch","error","readOnly","onKeyPress","test","outline","disabled","MySwal","withReactContent","Swal","handleSuccess","fire","text","customClass","confirmButton","buttonsStyling","window","location","FileUploaderMultiple","files","setFiles","uploadState","setUploadState","progress","setProgress","useDropzone","onDrop","acceptedFiles","file","Object","assign","getRootProps","getInputProps","renderFilePreview","storageRef","URL","createObjectURL","uploadTask","uploadBytesResumable","on","snapshot","bytesTransferred","totalBytes","pre","state","getDownloadURL","downloadURL","startsWith","alt","src","height","width","fileList","Math","round","toFixed","filtered","filter","i","handleRemoveFile","animated","style","values","every","href","e","preventDefault","WizardModernVertical","useRef","setStepper","linear","el","sm"],"mappings":"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","file":"static/js/16.a308a22e.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment, useState, forwardRef } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Eye, EyeOff } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { InputGroup, Input, InputGroupText, Label } from 'reactstrap'\n\nconst InputPasswordToggle = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    invalid,\n    ...rest\n  } = props\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible)\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />\n    }\n  }\n\n  return (\n    <Fragment>\n      {label ? (\n        <Label className='form-label' for={htmlFor}>\n          {label}\n        </Label>\n      ) : null}\n      <InputGroup\n        className={classnames({\n          [className]: className,\n          'is-invalid': invalid\n        })}\n      >\n        <Input\n          ref={ref}\n          invalid={invalid}\n          type={inputVisibility === false ? 'password' : 'text'}\n          placeholder={placeholder ? placeholder : '············'}\n          className={classnames({\n            [inputClassName]: inputClassName\n          })}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupText className='cursor-pointer' onClick={() => setInputVisibility(!inputVisibility)}>\n          {renderIcon()}\n        </InputGroupText>\n      </InputGroup>\n    </Fragment>\n  )\n})\n\nexport default InputPasswordToggle\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  invalid: PropTypes.bool,\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props['htmlFor'] === 'undefined') {\n      throw new Error('htmlFor prop is required when label prop is present')\n    }\n  },\n  htmlFor(props, propName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props['label'] === 'undefined') {\n      throw new Error('label prop is required when htmlFor prop is present')\n    }\n  }\n}\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n}\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\"\nimport { getAuth } from \"firebase/auth\"\nimport { getDatabase } from \"firebase/database\"\nimport { getStorage } from \"firebase/storage\"\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAqNbdDw4nNXar2iKG2iujBLOKNcgqozbE\",\n  authDomain: \"coinmercari.firebaseapp.com\",\n  projectId: \"coinmercari\",\n  storageBucket: \"coinmercari.appspot.com\",\n  messagingSenderId: \"519347227450\",\n  appId: \"1:519347227450:web:4ba87b95d1bc9d573e9e03\",\n  databaseURL: \"https://coinmercari-default-rtdb.firebaseio.com\",\n  storageBucket: \"coinmercari.appspot.com\"\n}\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig)\nconst database = getDatabase(app)\nconst auth = getAuth(app)\nconst storage = getStorage(app)\nexport default {auth, database, storage}","// ** React Imports\nimport { useEffect, useState, Fragment, forwardRef } from 'react'\n\n// ** Third Party Components\nimport Stepper from 'bs-stepper'\nimport classnames from 'classnames'\nimport { PropTypes } from 'prop-types'\nimport { ChevronRight } from 'react-feather'\n\n// ** Styles\nimport 'bs-stepper/dist/css/bs-stepper.min.css'\nimport '../../../@core/scss/base/plugins/forms/form-wizard.scss'\n\nconst Wizard = forwardRef((props, ref) => {\n  // ** Props\n  const { type, className, contentClassName, headerClassName, steps, separator, options, instance } = props\n\n  // ** State\n  const [activeIndex, setActiveIndex] = useState(0)\n\n  // ** Vars\n  let stepper = null\n\n  // ** Step change listener on mount\n  useEffect(() => {\n    stepper = new Stepper(ref.current, options)\n\n    ref.current.addEventListener('shown.bs-stepper', function (event) {\n      setActiveIndex(event.detail.indexStep)\n    })\n\n    if (instance) {\n      instance(stepper)\n    }\n  }, [])\n\n  // ** Renders Wizard Header\n  const renderHeader = () => {\n    return steps.map((step, index) => {\n      return (\n        <Fragment key={step.id}>\n          {index !== 0 && index !== steps.length ? <div className='line'>{separator}</div> : null}\n          <div\n            className={classnames('step', {\n              crossed: activeIndex > index,\n              active: index === activeIndex\n            })}\n            data-target={`#${step.id}`}\n          >\n            <button type='button' className='step-trigger'>\n              <span className='bs-stepper-box'>{step.icon ? step.icon : index + 1}</span>\n              <span className='bs-stepper-label'>\n                <span className='bs-stepper-title'>{step.title}</span>\n                {step.subtitle ? <span className='bs-stepper-subtitle'>{step.subtitle}</span> : null}\n              </span>\n            </button>\n          </div>\n        </Fragment>\n      )\n    })\n  }\n\n  // ** Renders Wizard Content\n  const renderContent = () => {\n    return steps.map((step, index) => {\n      return (\n        <div\n          className={classnames('content', {\n            [contentClassName]: contentClassName,\n            'active dstepper-block': activeIndex === index\n          })}\n          id={step.id}\n          key={step.id}\n        >\n          {step.content}\n        </div>\n      )\n    })\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={classnames('bs-stepper', {\n        [className]: className,\n        vertical: type === 'vertical',\n        'vertical wizard-modern': type === 'modern-vertical',\n        'wizard-modern': type === 'modern-horizontal'\n      })}\n    >\n      <div className={classnames('bs-stepper-header', { [headerClassName]: headerClassName })}>{renderHeader()}</div>\n      <div className='bs-stepper-content'>{renderContent()}</div>\n    </div>\n  )\n})\n\nexport default Wizard\n\n// ** Default Props\nWizard.defaultProps = {\n  options: {},\n  type: 'horizontal',\n  separator: <ChevronRight size={17} />\n}\n\n// ** PropTypes\nWizard.propTypes = {\n  type: PropTypes.string,\n  instance: PropTypes.func,\n  options: PropTypes.object,\n  className: PropTypes.string,\n  separator: PropTypes.element,\n  headerClassName: PropTypes.string,\n  contentClassName: PropTypes.string,\n  steps: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      subtitle: PropTypes.string,\n      icon: PropTypes.any,\n      content: PropTypes.any.isRequired\n    })\n  ).isRequired\n}\n","import React, { useState, useMemo } from 'react'\nimport Select from 'react-select'\nimport countryList from 'react-select-country-list'\nimport { selectThemeColors } from '@utils'\nimport '@styles/react/libs/react-select/_react-select.scss'\n\nfunction CountrySelector() {\n  const [value, setValue] = useState('')\n  const options = useMemo(() => countryList().getData(), [])\n\n  const changeHandler = value => {\n    setValue(value)\n  }\n\n  return <Select theme={selectThemeColors} className='react-select' options={options} value={value} onChange={changeHandler} />\n}\n\nexport default CountrySelector","// ** React Imports\nimport { Fragment, useState, useMemo } from 'react'\nimport CountrySelector from './CountrySelector'\nimport { isObjEmpty, selectThemeColors } from '@utils'\nimport classnames from 'classnames'\nimport '@src/firebase'\n// import { getAuth } from \"firebase/auth\"\nimport { getDatabase, ref, set } from \"firebase/database\"\n// ** Third Party Components\nimport { useForm, Controller } from 'react-hook-form'\nimport { ArrowLeft, ArrowRight } from 'react-feather'\nimport Select from 'react-select'\nimport countryList from 'react-select-country-list'\nimport '@styles/react/libs/react-select/_react-select.scss'\n\n// ** Reactstrap Imports\nimport { Label, Row, Col, Button, Form, Input, FormFeedback } from 'reactstrap'\n\nconst defaultValues = {\n  city: '',\n  zipcode: '',\n  address: '',\n  country: null\n}\n\nconst Address = ({ stepper }) => {\n  const userData = JSON.parse(localStorage.getItem(\"userData\"))\n  defaultValues.city = userData?.userAddress?.city || \"\"\n  defaultValues.zipcode = userData?.userAddress?.zipcode || \"\"\n  defaultValues.address = userData?.userAddress?.address || \"\"\n  defaultValues.country = userData?.userAddress?.country || null\n  // ** Hooks\n  // const auth = getAuth()\n  const userId = userData.localId\n  function writeUserData(city, zipcode, address, country) {\n    const db = getDatabase()\n    const userAddress = { city, zipcode, address, country }\n    set(ref(db, `users/${userId}/userAddress`), userAddress)\n      .then(\n        localStorage.setItem(\"userData\", JSON.stringify({\n          ...userData,\n          userAddress\n\n        }))\n    )\n  }\n\n\n  const [data, setData] = useState(null)\n\n  const [value, setValue] = useState('')\n  const options = useMemo(() => countryList().getData(), [])\n\n  const changeHandler = value => {\n    setValue(value)\n  }\n\n  const {\n    control,\n    setError,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({ defaultValues })\n\n  const onSubmit = data => {\n    setData(data)\n    if (isObjEmpty(errors)) {\n      stepper.next()\n      const { city, zipcode, address } = data\n      writeUserData(city, zipcode, address, data.country.value)\n    } else {\n      for (const key in data) {\n        if (data[key].length === 0) {\n          setError(key, {\n            type: 'manual',\n            message: `Please enter a valid ${key}`\n          })\n        }\n      }\n    }\n  }\n\n  return (\n    <Fragment>\n      <div className='content-header'>\n        <h5 className='mb-0'>Address</h5>\n        <small>Enter Your Address.</small>\n      </div>\n      <Form onSubmit={ handleSubmit(data => onSubmit(data)) }>\n        <Row>\n          <Col md='6' className='mb-1'>\n            <Label className='form-label' for='address'>\n              Address\n            </Label>\n            <Controller\n              // value={ address }\n              id='address'\n              name='address'\n              control={ control }\n              render={ ({ field }) => (\n                <Input invalid={ errors.address && true } { ...field } />\n              ) }\n            />\n            { errors.address && <FormFeedback>{ errors.address.message }</FormFeedback> }\n          </Col>\n          <Col md='6' className='mb-1'>\n            <Label className='form-label' for='city'>\n              City\n            </Label>\n            <Controller\n              // value={ city }\n              id='city'\n              name='city'\n              control={ control }\n              render={ ({ field }) => (\n                <Input invalid={ errors.city && true } { ...field } />\n              ) }\n            />\n            { errors.city && <FormFeedback>{ errors.city.message }</FormFeedback> }\n          </Col>\n        </Row>\n        <Row>\n          <Col md='6' className='mb-1'>\n            <Label className='form-label' for='zipcode'>\n              Zipcode\n            </Label>\n            <Controller\n              // value={ zipcode }\n              id='zipcode'\n              name='zipcode'\n              control={ control }\n              render={ ({ field }) => <Input maxLength='6' invalid={ errors.zipcode && true } { ...field } /> }\n            />\n            { errors.zipcode && <FormFeedback>{ errors.zipcode.message }</FormFeedback> }\n          </Col>\n          <Col md='6' className='mb-1'>\n            <Label className='form-label' for='country'>\n              Country\n            </Label>\n            <Controller\n              // value={ country }\n              defaultValue={ userData?.userAddress?.country }\n              id='country'\n              name='country'\n              control={ control }\n              render={ ({ field }) => <Select theme={ selectThemeColors } className={ classnames('react-select', { 'is-invalid': data !== null && data.country === null }) } options={ options } value={ value } onChange={ changeHandler }\n                { ...field }\n                defaultValue={ \"NG\" }\n              /> }\n            />\n          </Col>\n        </Row>\n        <div className='d-flex justify-content-between'>\n          <Button type='button' color='primary' className='btn-prev' onClick={ () => stepper.previous() }>\n            <ArrowLeft size={ 14 } className='align-middle me-sm-25 me-0'></ArrowLeft>\n            <span className='align-middle d-sm-inline-block d-none'>Previous</span>\n          </Button>\n          <Button type='submit' color='primary' className='btn-next'>\n            <span className='align-middle d-sm-inline-block d-none'>Next</span>\n            <ArrowRight size={ 14 } className='align-middle ms-sm-25 ms-0'></ArrowRight>\n          </Button>\n        </div>\n      </Form>\n    </Fragment>\n  )\n}\n\nexport default Address\n","// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n\n// ** Utils\nimport { isObjEmpty, isUserLoggedIn } from '@utils'\n\nimport classnames from 'classnames'\nimport InputPasswordToggle from '@components/input-password-toggle'\nimport Flatpickr from 'react-flatpickr'\n\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport { getAuth, updateProfile } from \"firebase/auth\"\n// ** Third Party Components\nimport '@src/firebase'\nimport { getDatabase, ref, set} from \"firebase/database\"\nimport * as yup from 'yup'\nimport { useForm, Controller } from 'react-hook-form'\nimport { ArrowLeft, ArrowRight } from 'react-feather'\nimport { yupResolver } from '@hookform/resolvers/yup'\n\n// ** Reactstrap Imports\nimport { Form, Label, Input, Row, Col, Button, FormFeedback } from 'reactstrap'\n\nconst defaultValues = {\n  fullName: '',\n  email: '',\n  SSN: '',\n  confirmSSN: '',\n  DOB: null\n}\n\nconst AccountDetails = ({ stepper }) => {\n  const userData = JSON.parse(localStorage.getItem('userData'))\n  const SignupSchema = yup.object().shape({\n    fullName: yup.string().required(),\n    email: yup.string().email(),\n    SSN: yup.string().required(),\n    confirmSSN: yup\n      .string()\n      .required()\n      .oneOf([yup.ref(`SSN`), null], 'SSN must match')\n  })\n\n\n  // ** Hooks\n  const [data, setData] = useState(null)\n  // const auth = getAuth()\n  // const userId = auth?.currentUser?.uid\n  const userId = userData.localId\n  function writeUserData(fullName, email, SSN, confirmSSN, DOB) {\n    const userInformation = { fullName, email, SSN, confirmSSN, DOB }\n  const db = getDatabase()\n  set(ref(db,  `users/${userId}/userInformation`), userInformation)\n    .then(\n       localStorage.setItem(\"userData\", JSON.stringify({...userData, userInformation }))\n     )\n}\n\n\n   useEffect(() => {\n    if (isUserLoggedIn() !== null) {\n    }\n   }, [])\n  \n  defaultValues.fullName = userData?.displayName || \"\"\n  defaultValues.DOB = userData?.userInformation?.DOB || null\n  defaultValues.SSN = userData?.userInformation?.SSN || \"\"\n  defaultValues.confirmSSN = userData?.userInformation?.confirmSSN || \"\"\n  const {\n    control,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({\n    defaultValues,\n    resolver: yupResolver(SignupSchema)\n  })\n\n  const onSubmit = (data) => {\n      setData(data)\n    if (isObjEmpty(errors)) {\n      stepper.next()\n  const {fullName, SSN, confirmSSN, DOB} = data\n      writeUserData(fullName, userData && userData[\"email\"], SSN, confirmSSN, String(new Date(data.DOB)))\n    }\n\n    const auth = getAuth()\n    updateProfile(auth.currentUser, {\n      displayName: data.fullName\n    }).then(() => {\n      // Profile updated!\n      // ...\n      console.log(\"Profile has been updated\")\n    }).catch((error) => {\n      console.log(error)\n    })\n  }\n\n  return (\n    <Fragment>\n      <div className='content-header'>\n        <h5 className='mb-0'>Account Details</h5>\n        <small className='text-muted'>Enter Your Account Details.</small>\n      </div>\n      <Form onSubmit={handleSubmit(data => onSubmit(data))}>\n        <Row>\n          <Col md='6' className='mb-1'>\n            <Label className='form-label' for='fullName'>\n              Full Name\n            </Label>\n            <Controller\n              id='fullName'\n              name='fullName'\n              control={control}\n              render={({ field }) => <Input invalid={errors.fullName && true} {...field}/>}\n            />\n            {errors.fullName && <FormFeedback>{errors.fullName.message}</FormFeedback>}\n          </Col>\n          <Col md='6' className='mb-1'>\n            <Label className='form-label' for={`email`}>\n              Email\n            </Label>\n            <Controller\n              control={control}\n              id='email'\n              name='email'\n              render={() => (\n                <Input type='email' readOnly value={(userData && userData['email']) || ''} />\n              )}\n            />\n            {errors.email && <FormFeedback>{errors.email.message}</FormFeedback>}\n          </Col>\n        </Row>\n        <Row>\n          <div className='form-password-toggle col-md-6 mb-1'>\n            <Label className='form-label' for='SSN'>\n              Social Security\n            </Label>\n            <Controller\n              id='SSN'\n              name='SSN'\n              control={control}\n              render={({ field }) => <InputPasswordToggle onKeyPress={(event) => {\n        if (!/[0-9]/.test(event.key)) {\n          // event.preventDefault()\n        }\n      }} maxLength='9' invalid={errors.SSN && true} {...field} />}\n            />\n            {errors.SSN && <FormFeedback>{errors.SSN.message}</FormFeedback>}\n          </div>\n          <div className='form-password-toggle col-md-6 mb-1'>\n            <Label className='form-label' for='confirmSSN'>\n              Confirm Social Security\n            </Label>\n            <Controller\n              control={control}\n              id='confirmSSN'\n              name='confirmSSN'\n              render={({ field }) => <InputPasswordToggle onKeyPress={(event) => {\n        if (!/[0-9]/.test(event.key)) {\n          // event.preventDefault()\n        }\n      }} maxLength='9' invalid={errors.confirmSSN && true} {...field} />}\n            />\n            {errors.confirmSSN && <FormFeedback>{errors.confirmSSN.message}</FormFeedback>}\n          </div>\n          <Col md='6' className='mb-1'>\n            <Label className='form-label' for='DOB'>\n        DOB\n      </Label>\n     <Controller\n              control={control}\n              id='DOB'\n              name='DOB'\n              render={({ field }) => (\n                <Flatpickr\n                  {...field}\n                  className={classnames('form-control', {\n                    'is-invalid': data !== null && data.DOB === null\n                  })}\n                />\n              )}\n            />\n          </Col>\n        </Row>\n        <div className='d-flex justify-content-between'>\n          <Button color='secondary' className='btn-prev' outline disabled>\n            <ArrowLeft size={14} className='align-middle me-sm-25 me-0'></ArrowLeft>\n            <span className='align-middle d-sm-inline-block d-none'>Previous</span>\n          </Button>\n          <Button type='submit' color='primary' className='btn-next' >\n            <span className='align-middle d-sm-inline-block d-none'>Next</span>\n            <ArrowRight size={14} className='align-middle ms-sm-25 ms-0'></ArrowRight>\n          </Button>\n        </div>\n\n      </Form>\n    </Fragment>\n  )\n}\n\nexport default AccountDetails\n","// ** React Imports\nimport { useState, Fragment } from 'react'\nimport { useForm, Controller } from 'react-hook-form'\nimport { ref, uploadBytesResumable, getStorage } from 'firebase/storage'\nimport '@src/firebase'\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Button, ListGroup, ListGroupItem, Form, Col, Progress } from 'reactstrap'\n\n// ** Styles\nimport 'animate.css/animate.css'\nimport '@styles/base/plugins/extensions/ext-component-sweet-alerts.scss'\n// ** Third Party Imports\nimport { useDropzone } from 'react-dropzone'\nimport { FileText, X, DownloadCloud, ArrowLeft, ArrowRight} from 'react-feather'\n\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nconst MySwal = withReactContent(Swal)\n\nconst storage = getStorage()\n\n\n  const handleSuccess = () => {\n    return MySwal.fire({\n      title: 'Submitted!',\n      text: 'Verification in review!',\n      icon: 'success',\n      customClass: {\n        confirmButton: 'btn btn-primary'\n      },\n      buttonsStyling: false\n    }).then(function() {\n    window.location = '/dashboard/'\n})\n  }\n\nconst FileUploaderMultiple = ({ stepper }) => {\n  // ** State\n  const [files, setFiles] = useState([])\n  const [uploadState, setUploadState] = useState(null)\n  const [progress, setProgress] = useState(0)\n  const {\n    handleSubmit,\n    formState: { }\n  } = useForm({ })\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop: acceptedFiles => {\n      setFiles([...files, ...acceptedFiles.map(file => Object.assign(file))])\n    }\n  })\n\n   const onSubmit = data => {\n    if (Object.values(data).every(field => field.length > 0)) {\n     console.log(data)\n    } else {\n      for (const key in data) {\n        if (data[key].length === 0) {\n          setError(key, {\n            type: 'manual',\n            message: `Please enter a valid ${key}`\n          })\n        }\n      }\n    }\n  }\n  const renderFilePreview = file => {\n       const storageRef = ref(storage, file.name, URL.createObjectURL(file))\n      const uploadTask = uploadBytesResumable(storageRef, file)\n      uploadTask.on('state_changed', \n  (snapshot) => {\n    // Observe state change events such as progress, pause, and resume\n    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n    const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n    { setProgress((pre) => progress + pre) }\n    console.log(`${'Upload is '}`, progress, `${'% done'}`)\n     \n    switch (snapshot.state) {\n      case 'paused':\n        console.log('Upload is paused')\n        break\n      case 'running':\n        console.log('Upload is running')\n        setUploadState(snapshot.state)\n        break\n    \n    }\n    \n  },\n  () => {\n    // Handle successful uploads on complete\n    // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n    getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n      console.log('File available at', downloadURL)\n    })\n  }\n  )\n    if (file.type.startsWith('image')) {\n      return <img className='rounded' alt={file.name} src={URL.createObjectURL(file)} height='28' width='28' />\n     \n    } else {\n      return <FileText size='28' />\n    }\n  }\n\n  const handleRemoveFile = file => {\n    const uploadedFiles = files\n    const filtered = uploadedFiles.filter(i => i.name !== file.name)\n    setFiles([...filtered])\n  }\n\n  const renderFileSize = size => {\n    if (Math.round(size / 100) / 10 > 1000) {\n      return `${(Math.round(size / 100) / 10000).toFixed(1)} mb`\n    } else {\n      return `${(Math.round(size / 100) / 10).toFixed(1)} kb`\n    }\n  }\n\n  const fileList = files.map((file, index) => (\n   <ListGroupItem key={`${file.name}-${index}`} className=''>\n      <div className=\"d-flex align-items-center justify-content-between\">\n        <div className='file-details d-flex align-items-center'>\n          <div className='file-preview me-1'>{renderFilePreview(file)}</div>\n          <div>\n            <p className='file-name mb-0'>{file.name}</p>\n            <p className='file-size mb-0'>{renderFileSize(file.size)}</p>\n          </div>\n        </div>\n      <Button color='danger' outline size='sm' className='btn-icon' onClick={() => handleRemoveFile(file)}>\n        <X size={14} />\n      </Button>\n      </div>\n      <Progress\n          animated\n           style={{\n            height: '8px'\n          }}\n          color=\"success\"\n          value={progress / 100}\n        />\n    </ListGroupItem>\n  ))\n\n\n  return (\n  <Fragment>\n      <div className='content-header'>\n        <h5 className='mb-0'>Upload Document</h5>\n        <small>Drivers License or Government ID/Selfie</small>\n      </div>\n       <Form onSubmit={handleSubmit(onSubmit)}>\n        <div {...getRootProps({ className: 'dropzone' })}>\n          <input {...getInputProps()} disabled={uploadState === 'uploading'}/>\n          <div className='d-flex align-items-center justify-content-center flex-column'>\n            <DownloadCloud size={64} />\n            <h5>Drop Files here or click to upload</h5>\n            <p className='text-secondary'>\n              Drop files here or click{' '}\n              <a href='/' onClick={e => e.preventDefault()}>\n                browse\n              </a>{' '}\n              thorough your machine\n            </p>\n          </div>\n        </div>\n        {files.length ? (\n          <Fragment>\n            <ListGroup className='my-2'>{fileList}</ListGroup>\n            <div className='d-flex justify-content-end'>\n             </div>\n          </Fragment>\n        ) : null}\n    \n      \n    <Fragment>\n     <div className='d-flex justify-content-between'>\n          <Button color='primary' className='btn-prev' onClick={() => stepper.previous()}>\n            <ArrowLeft size={14} className='align-middle me-sm-25 me-0'></ArrowLeft>\n            <span className='align-middle d-sm-inline-block d-none'>Previous</span>\n          </Button>\n          <div className='btn-submit'>\n          <Button color='success' type='submit' onClick={handleSuccess}>\n          Submit\n          </Button>\n        </div>\n        </div>\n        </Fragment>\n  \n      </Form>\n    </Fragment>\n  )\n}\n\nexport default FileUploaderMultiple\n","// ** React Imports\nimport { useRef, useState } from 'react'\n\n// ** Custom Components\nimport Wizard from '@components/wizard'\n\n// ** Steps\nimport Address from './Address'\nimport PersonalInfo from './PersonalInfo'\nimport AccountDetails from './AccountDetails'\nimport FileUploaderMultiple from './FileUploaderMultiple'\n\n// ** Icons Imports\nimport { FileText, User, MapPin, Link } from 'react-feather'\n\nconst WizardModernVertical = () => {\n  // ** Ref\n  const ref = useRef(null)\n\n  // ** State\n  const [stepper, setStepper] = useState(null)\n\n  const steps = [\n    {\n      id: 'account-details',\n      title: 'Your Information',\n      subtitle: 'Enter Your Information.',\n      icon: <User size={18} />,\n      content: <AccountDetails stepper={stepper} type='modern-vertical' />\n    },\n    {\n      id: 'step-address',\n      title: 'Address',\n      subtitle: 'Add Address',\n      icon: <MapPin size={18} />,\n      content: <Address stepper={stepper} type='modern-vertical' />\n    },\n    {\n      id: 'personal-info',\n      title: 'Document Upload',\n      subtitle: 'Upload your document',\n      icon: <FileText size={18} />,\n      content: <FileUploaderMultiple stepper={stepper} type='modern-vertical' />\n    }\n    \n  ]\n\n  return (\n    <div className='modern-vertical-wizard'>\n      <Wizard\n        type='modern-vertical'\n        ref={ref}\n        steps={steps}\n        options={{\n          linear: false\n        }}\n        instance={el => setStepper(el)}\n      />\n    </div>\n  )\n}\n\nexport default WizardModernVertical\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Demo Components\nimport WizardModernVertical from './WizardModernVertical'\n\n// ** Custom Components\nimport BreadCrumbs from '@components/breadcrumbs'\n\nconst Wizard = () => {\n  return (\n    <Fragment>\n      <Row>\n        <Col sm='12'>\n          <WizardModernVertical />\n        </Col>\n       \n      </Row>\n    </Fragment>\n  )\n}\nexport default Wizard\n"],"sourceRoot":""}