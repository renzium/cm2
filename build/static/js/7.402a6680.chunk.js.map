{"version":3,"sources":["views/investmentPlans/PricingCards.js","assets/images/illustration/pricing-Illustration.svg","views/investmentPlans/PricingTrial.js","views/investmentPlans/PricingHeader.js","views/investmentPlans/index.js"],"names":["PricingCards","data","duration","bordered","fullWidth","cols","colsProps","md","xs","className","sm","offset","size","lg","classnames","map","item","index","monthlyPrice","yearlyPlan","perMonth","yearlyPrice","totalAnnual","imgClasses","title","border","popular","toLowerCase","color","pill","src","img","alt","subtitle","tag","planBenefits","benefit","i","block","outline","PricingTrial","trialSvg","style","transform","PricingHeader","Pricing","useState","setData","faq","setFaq","setDuration","useEffect","axios","get","then","res","dataArr","faqArr","Object","entries","forEach","key","val","push","id"],"mappings":"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","file":"static/js/7.402a6680.chunk.js","sourcesContent":["// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Row, Col, Card, CardBody, CardText, Badge, ListGroup, ListGroupItem, Button } from 'reactstrap'\n\nconst PricingCards = ({ data, duration, bordered, fullWidth, cols }) => {\n  const colsProps = cols ? cols : { md: 4, xs: 12 }\n\n  const renderPricingCards = () => {\n    return data.map((item, index) => {\n      const monthlyPrice = duration === 'yearly' ? item.yearlyPlan.perMonth : item.monthlyPrice,\n        yearlyPrice = duration === 'yearly' ? item.yearlyPlan.totalAnnual : item.monthlyPrice,\n        imgClasses = item.title === 'Mercari Silver' ? 'mb-2 mt-5' : item.title === 'Mercari Gold' ? 'mb-1' : 'mb-2'\n\n      return (\n        <Col key={index} {...colsProps}>\n          <Card\n            className={classnames('text-center', {\n              border: bordered,\n              'shadow-none': bordered,\n              popular: item.popular === true,\n              'border-primary': bordered && item.popular === true,\n              [`${item.title.toLowerCase()}-pricing`]: item.title\n            })}\n          >\n            <CardBody>\n              {item.popular === true ? (\n                <div className='pricing-badge text-end'>\n                  <Badge color='light-primary' pill>\n                    Popular\n                  </Badge>\n                </div>\n              ) : null}\n              <img className={imgClasses} src={item.img} alt='pricing svg' />\n              <h3>{item.title}</h3>\n              <CardText>{item.subtitle}</CardText>\n              <div className='annual-plan'>\n                <div className='plan-price mt-2'>\n                  <span className={`pricing-${item.title.toLowerCase()}-value fw-bolder text-primary`}>\n                    {monthlyPrice}\n                  </span>\n                  <sup className='font-medium-1 fw-bold text-primary me-25'>%</sup>\n                  <span className='pricing-duration text-body font-medium-1 fw-bold ms-25'>/month</span>\n                </div>\n                {item.title !== 'Mercari Silver' && duration === 'yearly' ? (\n                  <small className='annual-pricing text-muted'>USD {yearlyPrice} / year</small>\n                ) : null}\n              </div>\n              <ListGroup tag='ul' className='list-group-circle text-start mb-2'>\n                {item.planBenefits.map((benefit, i) => (\n                  <ListGroupItem key={i} tag='li'>\n                    {benefit}\n                  </ListGroupItem>\n                ))}\n              </ListGroup>\n              <Button block outline={item.title !== 'Standard'} color={item.title === ('Mercari Diamond', 'Mercari Gold', 'Mercari Silver') ? 'success' : 'primary'}>\n                {item.title === ('Mercari Diamond', 'Mercari Gold', 'Mercari Silver') ? 'Your current plan' : 'Upgrade'}\n              </Button>\n            </CardBody>\n          </Card>\n        </Col>\n      )\n    })\n  }\n\n  const defaultCols = {\n    sm: { offset: 2, size: 10 },\n    lg: { offset: 2, size: 10 }\n  }\n\n  return (\n    <Row className='pricing-card'>\n      <Col {...(!fullWidth ? defaultCols : {})} className={classnames({ 'mx-auto': !fullWidth })}>\n        <Row>{renderPricingCards()}</Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default PricingCards\n","export default __webpack_public_path__ + \"static/media/pricing-Illustration.b00baee8.svg\";","// ** Reactstrap Imports\nimport { Row, Col, Button } from 'reactstrap'\n\n// ** Images\nimport trialSvg from '@src/assets/images/illustration/pricing-Illustration.svg'\n\nconst PricingTrial = () => {\n  return (\n    <div className='pricing-free-trial'>\n      <Row>\n        <Col className='mx-auto' lg={{ size: 10, offset: 3 }} sm='12'>\n          <div className='pricing-trial-content d-flex justify-content-between'>\n            <div className='text-center text-md-start mt-3'>\n              <h3 className='text-primary'>Still not convinced? Start with Mercari Silver!</h3>\n              <h5>You will get 10% bonus instantly.</h5>\n              <div className='mt-2 mt-lg-3'>\n                <Button color='primary'>Start Investing</Button>\n              </div>\n            </div>\n            <img\n              className='pricing-trial-img img-fluid'\n              src={trialSvg}\n              alt='trial svg'\n              style={{\n                transform: 'scaleX(1)'\n              }}\n            />\n          </div>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default PricingTrial\n","// ** Reactstrap Imports\nimport { Input, Alert } from 'reactstrap'\n\nconst PricingHeader = () => {\n\n  return (\n    <div className='text-center'>\n      <h1 className='mt-5'>Investment Plans</h1>\n      <p className='mb-2 pb-75'>\n        All investment plans include instant withdrawal and insurance back up. Choose the best plan to fit your needs.\n      </p>\n     <Alert color='info'>\n        <h4 className='alert-heading'>Info</h4>\n        <div className='alert-body'>\n          Once your balance is up to the minimum deposit of an Investment Plan, \nYour Plan will automatically switch to any of the plans.\n        </div>\n      </Alert>\n    </div>\n\n\n  )\n}\n\nexport default PricingHeader\n","// ** React Imports\nimport { useState, useEffect, Fragment } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\n\n// ** Demo Components\nimport PricingCards from './PricingCards'\nimport PricingTrial from './PricingTrial'\nimport PricingHeader from './PricingHeader'\n\n// ** Styles\nimport '@styles/base/pages/page-pricing.scss'\n\nconst Pricing = () => {\n  // ** States\n  const [data, setData] = useState(null),\n    [faq, setFaq] = useState(null),\n    [duration, setDuration] = useState('monthly')\n\n  useEffect(() => {\n    axios.get('/pricing/data').then(res => {\n      const dataArr = [],\n        faqArr = []\n\n      Object.entries(res.data).forEach(([key, val]) => {\n        if (key !== 'qandA') {\n          dataArr.push(val)\n          setData([...dataArr])\n        } else {\n          faqArr.push(val)\n          setFaq(faqArr[0])\n        }\n      })\n    })\n  }, [])\n\n  return (\n    <div id='pricing-table'>\n      <PricingHeader duration={duration} setDuration={setDuration} />\n      {data !== null && faq !== null ? (\n        <Fragment>\n          <PricingCards data={data} duration={duration} />\n          <PricingTrial />\n        </Fragment>\n      ) : null}\n    </div>\n  )\n}\n\nexport default Pricing\n"],"sourceRoot":""}